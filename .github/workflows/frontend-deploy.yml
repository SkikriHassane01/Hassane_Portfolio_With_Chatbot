name: Deploy Frontend to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-deploy.yml'

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for proper deployment

      - name: Verify frontend directory
        run: |
          ls -la ./frontend
          echo "Checking for package files:"
          ls -la ./frontend/package*

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build with Docker
        working-directory: ./frontend
        env:
          # Set the public path to match GitHub Pages deployment
          PUBLIC_URL: /${{ github.event.repository.name }}
        run: |
          # Pass the PUBLIC_URL to Docker build
          docker build --build-arg PUBLIC_URL=/${{ github.event.repository.name }} -t portfolio-frontend .
          docker create --name temp-container portfolio-frontend
          docker cp temp-container:/usr/share/nginx/html ../dist-frontend
          docker rm temp-container
      
      - name: Copy public assets
        run: |
          if [ -d "./frontend/public" ]; then
            mkdir -p ./dist-frontend/public
            cp -r ./frontend/public/* ./dist-frontend/public/ || echo "No files to copy"
            
            # Ensure SVG files are properly copied
            if [ -d "./frontend/public/assets/images" ]; then
              mkdir -p ./dist-frontend/public/assets/images
              find ./frontend/public/assets/images -name "*.svg" -exec cp {} ./dist-frontend/public/assets/images/ \;
              echo "SVG files in source directory:"
              find ./frontend/public/assets/images -name "*.svg"
              echo "SVG files in destination directory:"
              find ./dist-frontend/public/assets/images -name "*.svg"
            fi
            
            echo "Public directory contents after copy:"
            ls -la ./dist-frontend/public || echo "Public directory not created"
          else
            echo "No public directory found in frontend"
          fi
          
      - name: Ensure .nojekyll exists
        run: touch ./dist-frontend/.nojekyll

      - name: Deploy to GitHub Pages
        id: deployment
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist-frontend
          branch: gh-pages
          token: ${{ github.token }}
          
      - name: Display deployment information
        run: |
          echo "Deployment completed!"
          echo "The site should be available at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
          echo "If not showing immediately, please wait a few minutes for GitHub Pages to build."